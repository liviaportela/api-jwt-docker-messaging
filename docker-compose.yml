services:
  db_mysql:
    image: mysql:8.0.29
    command: mysqld --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      TZ: America/Sao_Paulo
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: docker
      MYSQL_PASSWORD: admin123
      MYSQL_DATABASE: api-jwt-docker-messaging
      MYSQL_ROOT_HOST: '%'
      MYSQL_TCP_PORT: 3308
    ports:
      - 3308:3308
    networks:
      - livia-network

  db_mongo:
    image: mongo:8
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_DATABASE: api-jwt-docker-messaging
      MONGO_TCP_PORT: 27017
      MONGO_HOST: host
    volumes:
      - mongo_data:/data/db
    networks:
      - livia-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - 2181:2181
    networks:
      - livia-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - 9092:9092
    networks:
      - livia-network

  msusers:
    image: lpf17/msusers
    restart: always
    working_dir: /api-jwt-docker-messaging/msusers
    environment:
      TZ: America/Sao_Paulo
      SPRING.DATASOURCE.URL: jdbc:mysql://db_mysql:3308/api-jwt-docker-messaging?createDatabaseIfNotExist=true&serverTimezone=UTC&autoReconnect=true
      SPRING.DATASOURCE.USERNAME: docker
      SPRING.DATASOURCE.PASSWORD: admin123
      SPRING_KAFKA_TOPIC: notify
    ports:
      - 8080:8080
    command: mvn spring-boot:run
    depends_on:
      - db_mysql
      - kafka
    networks:
      - livia-network

  msnotify:
    image: lpf17/msnotify
    restart: always
    working_dir: /api-jwt-docker-messaging/msnotify
    environment:
      TZ: America/Sao_Paulo
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_GROUP_ID: notify-group
      SPRING_KAFKA_TOPIC: notify
      MONGO_URI: mongodb://db_mongo:27017/api-jwt-docker-messaging/createDatabaseIfNotExist=true&serverTimezone=UTC&autoReconnect=true
    ports:
      - 8081:8081
    command: mvn spring-boot:run
    depends_on:
      - kafka
      - db_mongo
    networks:
      - livia-network

volumes:
  mongo_data:

networks:
  livia-network:
    driver: bridge